version: '3.3'
services:
  event_db:
    image: postgres:13.0
    restart: always
    environment:
      POSTGRES_USER: event
      POSTGRES_PASSWORD: CHANGE-ME
    volumes:
      - event_db_folder:/var/lib/postgresql/data
    networks:
      - event_network
  event_backend:
    build: ./event-service
    command: rails server -b 0.0.0.0
    environment:
      - RAILS_ENV=development
      - DATABASE_USER_NAME=event
      - DATABASE_PASSWORD=CHANGE-ME
      - DATABASE_HOST=event_db
    restart: always
    networks:
      - event_network
    depends_on:
      - event_db
    volumes:
      # Mount the root folder that contains .git
      - .:/workspace:cached

  participation_db:
    image: postgres:13.0
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: CHANGE-ME
    volumes:
      - participation_db_folder:/var/lib/postgresql/data
    networks:
      - event_network
  participations:
    build: ./participation-back-end
    command: rails server -b 0.0.0.0
    # command: tail -f /dev/null
    ports:
      - 3001:3000
    environment:
      - RAILS_ENV=development
      - DATABASE_USER_NAME=postgres
      - DATABASE_PASSWORD=CHANGE-ME
      - DATABASE_HOST=participation_db
    restart: always
    networks:
      - event_network
    depends_on:
      - participation_db
    volumes:
      # Mount the root folder that contains .git
      - .:/workspace:cached
  front_end:
    build: ./front-end
    command: tail -f /dev/null
    restart: always
    networks: 
      - event_network
    volumes:
      # Mount the root folder that contains .git
      - .:/workspace:cached
  nginx:
    image: nginx
    # command: tail -f /dev/null
    ports:
      - "4200:80"
    networks:
      - event_network
    volumes:
      - ./nginx:/etc/nginx
      - ./front-end/dist:/dist
    depends_on:
      - event_backend
      - participations
networks:
  event_network:
volumes:
  event_db_folder:
    external:
      name: event_database
  participation_db_folder:
    external:
      name: participation_database